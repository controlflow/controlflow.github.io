---
layout: post
title: "Наследие прошлого или property hell (часть 5)"
date: 2015-04-08 17:54:00
tags: csharp properties design
---

## C# 4.0 и 5.0 - спасибо и на этом

Последовавшие за 3.0 релизы языка всегда были посвящены какому-то относительно большому направлению работ (`dynamic` и `async`) и не вносили качественных изменений в дизайн свойств.

### Свойства-мутанты из COM'а

Из-за того, в COM существуют свойства с формальными параметрами, а C# при потреблении метаданных игнорирует большинство сущностей, невыразимых в самом C#, то код работы с подобными COM-объектами выглядит как-то так:

```c#
void M(COMSpreadsheet spreadsheet) {
  spreadsheet.get_Range("A1").Value = 42;
  spreadsheet.set_Width("B1", comSpreadsheet.get_Width("B1") + 1);
}
```

```c#
void M(COMSpreadsheet spreadsheet) {
  spreadsheet.Range["A1"].Value = 42;
  spreadsheet.Width["B1"] += 1;
}
```

### Асинхронные свойства? Нет, спасибо

В версии языка 2.0, в C# были введены методы-итераторы, но не все знают что `yield return`/`yield break` работают еще и в `get`-акцессорах свойств:

```c#
class C {
  public IEnumerable<int> ImportantValues {
    get {
      yield return -1;
      yield return 0;
      yield return 42;
    }
  }
}
```

* TODO: дописать


## C# 6.0 - одумались?

### Синтаксис свойства с телом-выражением

* TODO: хорошо, что похоже на лямбда-выражения
* TODO: не повесить атрибут на get-акцессор
* TODO: не бросить исключение (какие заглушки генерировать IDE?)
* TODO: слишком похоже на поля (один символ разницы)

### Инициализатор авто-свойств

* TODO: как работают, упомянуть порядок инициализации в статике
* TODO: semicolon в синтаксисе раньше не требовался
* TODO: полиморфизм и инициализатор (аналогично проблемам виртуальных событий)

### Авто-свойства только для чтения

* TODO: полиморфизм + get-only авто-свойства = CS8080
* TODO: правила вызова акцессора или записи в backing field (почти как readonly-поля)
* TODO: починили хаком структуры
* TODO: компиляция += по get-only автосвойствам

### Успешны ли изменения C# 6.0?

* TODO: стало сложнее отличать стейт от не-стейта
* TODO: get-only auto-property explicit implementation + невозможность инициализировать

## Misc

* "хочу свойства рядом с полями", никто не знает что такое backing field
* "хочу поля внутри свойств"
* [Serializable], IXmlSerializable, наличие сеттеров
* отсутствие extension properties (в C# 3.0)
* фичи должны проверять и поля, и свойства
* в C# уже ничего не починить, господь, жги!
* byref<'a> решает проблемы ref/out, но сложен
* Реализация INPC - новый billion dollar mistake
* Свойства не First-class
* Нет делегации реализации акцессоров
* [DebuggerDisplay] - приходится следить
* порядок акцессоров произволен
* нельзя сделать делегат из свойства (в C# 1.0)